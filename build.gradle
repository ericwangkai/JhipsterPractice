buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE')
        classpath('com.moowork.gradle:gradle-node-plugin:0.8')

        classpath('com.moowork.gradle:gradle-grunt-plugin:0.6')
        classpath('org.springframework:springloaded:1.2.1.RELEASE')

        classpath('com.bmuschko:gradle-cargo-plugin:2.1')

    }
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'jetty'

apply plugin: 'idea'

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

bootRepackage {
   mainClass = 'com.eric.practice.Application'
}

springBoot {
    mainClass = 'com.eric.practice.Application'
}

apply from: 'yeoman.gradle'


apply from: 'liquibase.gradle'

apply from: 'gatling.gradle'

if (project.hasProperty('prod')) {
    profile = 'prod'
} else if (project.hasProperty('fast')) {
    profile = 'fast'
}

if (profile == 'prod') {
    apply from: 'profile_prod.gradle'
} else if (profile == 'fast') {
    apply from: 'profile_fast.gradle'
} else {
    apply from: 'profile_dev.gradle'
}

group = 'com.eric.practice'
version = '0.1-SNAPSHOT'

description = ''

configurations {
    providedRuntime
}

war {
    baseName = 'practice'
    version =  '0.1-SNAPSHOT'
}

repositories {
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

dependencies {
    compile group: 'io.dropwizard.metrics', name: 'metrics-core'
    compile group: 'io.dropwizard.metrics', name: 'metrics-ehcache', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite'
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-json', version: dropwizard_metrics_version
    compile(group: 'io.dropwizard.metrics', name: 'metrics-servlets') {
        exclude(module: 'metrics-healthchecks')
    }
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: jackson_version
    compile (group: 'com.ryantenney.metrics', name: 'metrics-spring', version: metrics_spring_version) {
        exclude(module: 'metrics-core')
    }
    compile(group: 'com.zaxxer', name: 'HikariCP') {
        exclude(module: 'tools')
    }
    compile group: 'commons-lang', name: 'commons-lang', version: commons_lang_version
    compile group: 'commons-io', name: 'commons-io', version: commons_io_version
    compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
    compile group: 'javax.transaction', name: 'javax.transaction-api'
    compile group: 'joda-time', name: 'joda-time'
    compile group: 'joda-time', name: 'joda-time-hibernate', version: joda_time_hibernate_version
    compile group: 'org.apache.geronimo.javamail', name: 'geronimo-javamail_1.4_mail', version: geronimo_javamail_1_4_mail_version
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernate_entitymanager_version
    compile group: 'org.hibernate', name: 'hibernate-envers'
    compile group: 'org.hibernate', name: 'hibernate-ehcache'
    compile group: 'org.hibernate', name: 'hibernate-validator'
    compile group: 'org.jadira.usertype', name: 'usertype.core', version: usertype_core_version
    compile (group: 'org.liquibase', name: 'liquibase-core', version: liquibase_core_version) {
        exclude(module: 'jetty-servlet')
    }
    compile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-spring-service-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-localconfig-connector'
    compile(group: 'org.springframework', name: 'spring-context-support') {
        exclude(module: 'quartz')
    }
    compile(group: 'com.mangofactory', name: 'swagger-springmvc', version: swagger_springmvc_version) {
        exclude(module: 'jackson-module-scala_2.10')
        exclude(module: 'scalap')
        exclude(module: 'scala-compiler')
    }
    compile group: 'mysql', name: 'mysql-connector-java'
    compile group: 'com.h2database', name: 'h2'
    compile group: 'fr.ippon.spark.metrics', name: 'metrics-spark-reporter', version: metrics_spark_reporter_version
    testCompile group: 'com.jayway.awaitility', name: 'awaitility', version: awaility_version
    testCompile group: 'com.jayway.jsonpath', name: 'json-path'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
    testCompile group: 'org.assertj', name: 'assertj-core-java8', version: assertj_core_version
    testCompile group: 'junit', name: 'junit'
    testCompile group: 'org.mockito', name: 'mockito-core'
    testCompile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    testCompile group: 'org.hamcrest', name: 'hamcrest-library'
    testCompile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: gatling_version
    testCompile group: 'info.cukes', name: 'cucumber-java', version: cucumber_Java_version
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: cucumber_Java_version
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version: selenium_version
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: selenium_version
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: selenium_version
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: selenium_version

    def cargoVersion = '1.4.13'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
        "org.codehaus.cargo:cargo-ant:$cargoVersion"

}

test {
    exclude 'function/**'
}

cargo {
    containerId = 'tomcat8x'
//    containerId = 'jetty9x'
    port = 9090

    deployable {
       // file = file('C:\\Users\\tommy.wang\\Documents\\project\\jhipster\\practice2\\build\\libs\\practice-0.1-SNAPSHOT.war')
        context = 'practice'
    }

    local {
        homeDir = file('D:\\Program Files (x86)\\apache-tomcat-8.0.20')
        //homeDir = file('D:\\Program Files (x86)\\jetty-9.2.10')
        outputFile = file('build/output.log')
        timeout = 60000

    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task functionTest( type: Test ) {
    exclude 'com/**'
}

task cucumber(description: 'Runs the cucumber tests.', group: 'Cucumber') {
    dependsOn assemble, compileTestJava

    doLast {
        def argList = [
            '--format', 'pretty',
            '--format', "json:build/cucumber/json/cucumber.json",
            '--features', 'build/resources/test/feature/'
        ]

        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.testRuntime + sourceSets.main.output + sourceSets.test.output
            args = argList
        }
    }
}
